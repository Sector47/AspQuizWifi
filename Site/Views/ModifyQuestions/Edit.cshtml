@using System.Activities.Statements
@using Site.Models
@model Site.Models.QUESTION

@{
    ViewData["Title"] = "Edit Question";
}

@{
    // check if model
    if (Model != null)
    {
        <h2>Edit Question</h2>
        <h3>@ViewBag.Msg</h3>
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (Model != null && Model.QUE_ID.ToString() != null)
    {
        @Html.HiddenFor(model => model.QUE_ID)
    }
    else
    {
        @Html.HiddenFor(model => model.QUI_ID)
    }


    <div class="form-group">
        @Html.LabelFor(model => model.QUE_QUESTION, "Question:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QUE_QUESTION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QUE_QUESTION, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TYPE_ID, "Type:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TYPE_ID, new SelectList(Enum.GetValues(typeof(ANS_TYPE))))
            @Html.ValidationMessageFor(model => model.TYPE_ID, "", new { @class = "text-danger" })
        </div>
    </div>
    <h2>Note: Correct answer here is what is used to grade the quiz, the correct answer in the answer itself is unnecessary and is unused for now.</h2>
    <p>For MCC and MCR questions the correct answer is formatted: a,b,c and so on where a means the first answer added was the correct answer.</p>
    <p>You can verify which answer was added first as they will be listed in order on the edit answer page for this question.</p>
    <div class="form-group">
        @Html.ActionLink("Edit Answers", "../ModifyAnswers/Index", new { id = Model.QUE_ID })
        <div class="col-md-10">
            @Html.LabelFor(model => model.QUESTION_ANSWER, "Correct Answer:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QUESTION_ANSWER, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QUESTION_ANSWER, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</div>
        }
        <div>
            @Html.ActionLink("Back to List", "../ModifyQuestions/Index", new { id = Model.QUI_ID })
        </div>
        // @Html.ActionLink("Delete Question", "Delete", new { id = Model.QUI_ID })
    }
    else
    {
        // no model = not an instructor, display permission error message
        <h2>@ViewBag.PermissionMsg</h2>
    }
}
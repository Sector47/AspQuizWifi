@using System.Activities.Statements
@using Site.Models
@model Site.Models.QUESTION

@{
    ViewData["Title"] = "Edit Question";
}

@{
    // check if model
    if (Model != null)
    {
        <h2>Edit Question</h2>

        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.QUE_ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.QUE_QUESTION, "Question:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.QUE_QUESTION, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QUE_QUESTION, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TYPE_ID, "Type:", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.TYPE_ID, new SelectList(Enum.GetValues(typeof(ANS_TYPE))))
                        @Html.ValidationMessageFor(model => model.TYPE_ID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.ActionLink("Edit Answers", "../ModifyAnswers/Index", new {id = Model.QUE_ID})
                    <div class="col-md-10">
                        @Html.LabelFor(model => model.QUESTION_ANSWER, "Correct Answer:", htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.QUESTION_ANSWER, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.QUESTION_ANSWER, "", new {@class = "text-danger"})
                        </div>
                    </div>
                  
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>
        }
        <div>
            @Html.ActionLink("Back to List", "../ModifyQuestions/Index", new { id = Model.QUI_ID })
        </div>
        // @Html.ActionLink("Delete Question", "Delete", new { id = Model.QUI_ID })
    }
    else
    {
        // no model = not an instructor, display permission error message 
        <h2>@ViewBag.PermissionMsg</h2>
    }
}